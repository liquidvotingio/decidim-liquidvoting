<% if current_user %>
  <!-- TODO: send ajax requests instead -->
  <!-- a blank session[:delegated_to] means we haven't checked yet;
       let's make it explicitly the delegate email OR "none" -->
  <% if session[:delegated_to].blank? %>
    <% d = Decidim::Liquidvoting::Client.delegation_for(current_user.email, proposal_url(proposal)) %>
    <% session[:delegated_to] = d.present? ? d.delegate.email : "none" %>
  <% end -%>

  <% if session[:delegated_to] == "none" %>
    <form action="/liquidvoting/delegations" method="POST">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
      <input type="hidden" name="delegator_email" value="<%= current_user.email %>">
      <input type="hidden" name="proposal_url" value="<%= proposal_url(proposal) %>">
      <select name="delegate_email">
      <% Decidim::User.where(admin: false).order(:name).each do |user| %>
        <option value="<%= user.email %>"><%= user.name -%></option>
      <% end %>
      </select>
      <input type='submit' value='Choose a Delegate' class="button" style="background:orange;">
    </form>
  <% else -%>
    Support delegated to <%= Decidim::User.find_by(email: session[:delegated_to]).name %>
    <form action="/liquidvoting/delegations" method="POST">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
      <input type="hidden" name="delegator_email" value="<%= current_user.email %>">
      <input type="hidden" name="proposal_url" value="<%= proposal_url(proposal) %>">
      <input name="_method" type="hidden" value="delete">
      <input type='submit' value='Delete Delegation' class="button">
    </form>
  <% end -%>
<% end -%>

<p>&nbsp;</p>

<% if proposal.rejected? || proposal.withdrawn? %>
  <div></div>
<% else %>
  <% if component_settings.participatory_texts_enabled? && from_proposals_list %>
    <%= render partial: "decidim/proposals/proposals/participatory_texts/proposal_vote_button", locals: { proposal: proposal, from_proposals_list: true } %>
  <% else %>
    <div id="proposal-<%= proposal.id %>-vote-button" class="button--vote-button">
      <% if !current_user %>
        <% if current_settings.votes_blocked? %>
          <%= action_authorized_button_to :vote, t("decidim.proposals.proposals.vote_button.votes_blocked"), proposal_proposal_vote_path(proposal_id: proposal, from_proposals_list: from_proposals_list), resource: proposal, class: "button #{vote_button_classes(from_proposals_list)} disabled", disabled: true %>
        <% else %>
          <%= action_authorized_button_to :vote, proposal_proposal_vote_path(proposal_id: proposal, from_proposals_list: from_proposals_list), resource: proposal, class: "button #{vote_button_classes(from_proposals_list)}", data: { disable: true, "redirect-url": proposal_path(proposal) } do %>
            <%= t("decidim.proposals.proposals.vote_button.vote") %>
            <span class="show-for-sr"><%= decidim_html_escape(present(proposal).title) %></span>
          <% end %>
        <% end %>
      <% else %>
        <% if @voted_proposals ? @voted_proposals.include?(proposal.id) : proposal.voted_by?(current_user) %>
          <%= action_authorized_button_to(
            :vote,
            proposal_proposal_vote_path(proposal_id: proposal, from_proposals_list: from_proposals_list),
            resource: proposal,
            method: :delete,
            remote: true,
            data: {
              disable: true,
              original: t("decidim.proposals.proposals.vote_button.already_voted"),
              replace: t("decidim.proposals.proposals.vote_button.already_voted_hover"),
              "redirect-url": proposal_path(proposal)
            },
            class: "button #{vote_button_classes(from_proposals_list)} active light",
            id: "vote_button-#{proposal.id}"
          ) do %>
            <%= icon("check", class: "icon--small") %>
            <%= t("decidim.proposals.proposals.vote_button.already_voted") %>
            <span class="show-for-sr"><%= decidim_html_escape(present(proposal).title) %></span>
          <% end %>
        <% else %>
          <% if proposal.maximum_votes_reached? && !proposal.can_accumulate_supports_beyond_threshold && current_component.participatory_space.can_participate?(current_user) %>
            <%= content_tag :button, t("decidim.proposals.proposals.vote_button.maximum_votes_reached"), class: "button #{vote_button_classes(from_proposals_list)} disabled", disabled: true %>
          <% else %>
            <% if vote_limit_enabled? && remaining_votes_count_for(current_user) == 0 %>
              <%= content_tag :button, t("decidim.proposals.proposals.vote_button.no_votes_remaining"), class: "button #{vote_button_classes(from_proposals_list)}", disabled: true %>
            <% elsif current_settings.votes_blocked? || !current_component.participatory_space.can_participate?(current_user) %>
              <%= content_tag :button, t("decidim.proposals.proposals.vote_button.votes_blocked"), class: "button #{vote_button_classes(from_proposals_list)} disabled", disabled: true %>
            <% else %>
              <%= action_authorized_button_to :vote, proposal_proposal_vote_path(proposal_id: proposal, from_proposals_list: from_proposals_list), resource: proposal, remote: true, data: { disable: true, "redirect-url": proposal_path(proposal) }, class: "button #{vote_button_classes(from_proposals_list)}" do %>
                <%= t("decidim.proposals.proposals.vote_button.vote") %>
                <span class="show-for-sr"><%= decidim_html_escape(present(proposal).title) %></span>
              <% end %>
            <% end %>
          <% end %>
        <% end %>
      <% end %>
    </div>
  <% end %>
<% end %>
