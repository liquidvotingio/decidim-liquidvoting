<% if current_user %>
  <!-- TODO: send ajax requests instead -->
  <% if @lv_state.user_has_voted    # VOTED so disable delegation UI %>
  <% elsif @lv_state.delegate_email # NOT VOTED BUT DELEGATED so present undelegation UI -%>
    Support delegated to <%= Decidim::User.find_by(email: @lv_state.delegate_email).name %>.
    <form action="/liquidvoting/delegations" method="POST">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
      <input type="hidden" name="delegator_email" value="<%= current_user.email %>">
      <input type="hidden" name="proposal_url" value="<%= proposal_url(proposal) %>">
      <input type="hidden" name="_method" value="delete">
      <input type='submit' value='X Cancel Delegate' class="button" style="width:100%;">
    </form>
  <% else    # NOT VOTED NOT DELEGATED so present delegation UI-%>
    <form action="/liquidvoting/delegations" method="POST">
      <input type="hidden" name="authenticity_token" value="<%= form_authenticity_token %>">
      <input type="hidden" name="delegator_email" value="<%= current_user.email %>">
      <input type="hidden" name="proposal_url" value="<%= proposal_url(proposal) %>">
      <select name="delegate_email">
      <% (Decidim::User.where(admin: false).order(:name).pluck(:email, :name).unshift(["", "(choose delegate)"])).each do |email, name| %>
        <option value="<%= email %>"><%= name -%></option>
      <% end %>
      </select>
      <input type='submit' value='X Choose Delegate' class="button" style="background:orange;width:100%;">
    </form>
  <% end -%>
<% end -%>
